% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.R
\name{fd_nls}
\alias{fd_nls}
\alias{model}
\alias{fd_residuals}
\alias{predict.fd_nls}
\alias{relisted_coef}
\alias{relisted_vcov}
\alias{relisted_fit}
\alias{vcov.relisted_fit}
\alias{guess_mGen}
\title{Ordinary Least Square (OLS) optimization of a fluorescence dilution
  model.}
\usage{
fd_nls(globalname, data, mgen = "guess", start = NULL, loop = 3,
  trace = TRUE, control = NULL, ..., nlsfun = nls)

model(object)

fd_residuals(data, ..., .list = NULL)

\method{predict}{fd_nls}(object, newdata = stop("'newdata' is missing"),
  model = NULL, ...)

relisted_coef(object, drop = TRUE)

relisted_vcov(object, vcov. = vcov, n = 1000)

relisted_fit(object, ...)

\method{vcov}{relisted_fit}(object, ...)

guess_mGen(data)
}
\arguments{
\item{globalname}{The name of an \code{\link{fd_model}} object sitting in the
global environment (that is, a \code{\link{character}} object).  See
\code{\link{fd_model-functions}} for the rationale.}

\item{data}{The (experimental) \code{\link{fd_data}} dataset.}

\item{mgen}{The maximum number of generations (integer).  If \code{NULL}, the
default of the proliferation model is considered.  If \code{"guess"},
guessed through \code{guess_mGen}.}

\item{start}{Alternative starting coefficients to \code{\link{start}}.}

\item{loop}{If \code{mgen} is not enough (there is a lot of cells in the
maximum number of generations), number of additional optimization rounds
that \code{fd_nls} can undertake with ever larger \code{mgen}.  This
parameter is important for automatic combing, e.g. with
\code{\link{fd_comb}}.}

\item{trace}{Whether to output additional trace information.}

\item{control}{Control parameters to pass along to the optimizer.}

\item{...}{For \code{fd_nls}, additional arguments to pass along to the
optimizer. For \code{fd_residuals}, the \code{fd_nls},
\code{\link[stats]{nls}}, \code{\link[nlme]{nlsList}} or
\code{\link[nlme]{nlme}} objects to find the residuals of (the arguments
have to be named).  For \code{relisted_fit}, additional parameters to pass
along to \code{relisted_vcov}. Not used by \code{predict} or \code{vcov}.}

\item{nlsfun}{A user-specified optimization function.  Must (at least) accept
the same arguments as \code{\link[stats]{nls}} (default).  The
"contributed" \code{nlsSA} function can also be used (see details).}

\item{object}{An \code{fd_nls}, \code{\link[stats]{nls}},
\code{\link[nlme]{nlsList}} or \code{\link[nlme]{nlme}} object.}

\item{.list}{Named list of additional \code{fd_nls},
\code{\link[stats]{nls}}, \code{\link[nlme]{nlsList}} or
\code{\link[nlme]{nlme}} objects.}

\item{newdata}{The new \code{\link{fd_data}} dataset for which to make
predictions. Notice that, contrary to \code{\link[stats]{predict.nls}},
here \code{newdata} cannot be missing.}

\item{model}{An \code{\link{fd_model}} object.  Must be specified if
\code{object} is not an \code{fd_nls} object (i.e. \code{model(object) ==
NULL}).}

\item{drop}{Whether to return the relisted parameters directly if there is
only one set of coefficients or a one-element list containing the relisted
parameters.}

\item{vcov.}{Variance-covariance function to use on the free parameters. For
example, the \pkg{sandwich} package offers an alternative to
\code{\link[stats]{vcov}} and could be used for a Huber-White estimation.
Alternatively, variance-covariance matrix to use.}

\item{n}{Number of Monte-Carlo simulations to run.}
}
\value{
\code{fd_nls} returns an \code{fd_nls} object, \code{model} an
  \code{fd_model} object, \code{fd_residuals} returns a \code{data.frame},
  \code{relisted_coef} returns a list of structured parameter values,
  \code{relisted_vcov} returns a variance-covariance matrix,
  \code{relisted_fit} an object with which \code{coef} and \code{vcov} can be
  used (see \emph{details}).
}
\description{
\code{fd_nls} acts as a wrapper around an
\code{\link[stats]{nls}}-like optimizer with additional checks and
capabilities.  Other functions support the activity of \code{fd_nls}.
}
\details{
\code{fd_nls} returns an \code{fd_nls} object, inheriting \code{nls}
(the return class of \code{\link[stats]{nls}}), augmented by model
information.  Therefore, the functions that can be used on an \code{nls}
object can be used on an \code{fd_nls} object, such as \code{coef},
\code{predict} or \code{summary}.

\code{model} returns the \code{fd_model} object that was used to perform the
optimization. \code{fd_residuals} returns \code{data} with the content of the
\code{y} column replaced by the predicted values.  \code{predict} returns a
numeric vector of the predicted values for the \code{\link{fd_data}} dataset
\code{newdata}.  \code{relisted_coef} is a wrapper around
\code{\link{relist.fd_model}} and return the relisted optimal coefficients.
In some cases, e.g. \code{\link[nlme]{nlme}} and \code{\link[nlme]{nlsList}},
instead of a vector, \code{coef} returns a matrix with the coefficients in
column and the group levels in rows. In this case, \code{relisted_coef}
returns a list of relisted coefficients.  If \code{drop=FALSE}, in the case
only one set of coefficients is returned, a one-element list of relisted
coefficients is returned instead of the relisted coefficients directly.

\code{relisted_vcov} uses a Monte Carlo simulation, dependent on package
\pkg{mvtnorm}, to get to the variance-covariance matrix of the relisted
parameters from the variance-covariance matrix of the free parameters
returned by \code{vcov} (using singular value decomposition).  The rows and
columns are ordered as per\verb{
}\code{names(unlist(relisted_coef(object)))}.

\code{relisted_fit} calls both \code{relisted_coef} and \code{relisted_vcov}
and returns an object with which \code{coef} and \code{vcov} can be used.
}
\section{Remark}{
 Instead of \code{nls}, \code{GenSA} can be used for
  optimization through the "contributed" wrapper \code{nlsSA}.  \code{nlsSA}
  can be sourced with \verb{
}\code{source(system.file("contrib", "nlsSA.R",
  package="fluodilution"))}.
}

\section{Required packages}{
 Please install \pkg{mvtnorm} for
  \code{relisted_vcov} and \code{relisted_fit}.
}

\examples{
data(FdSTyphimuriumWTC57)
dat <- cutoff(FdSTyphimuriumWTC57)
mdl <<- fd_model(data = dat, constraints = attr(dat, "bestcstr"))
guess_mGen(dat)
control <- list(maxit = 1L)
\dontrun{
control <- NULL
}

\dontrun{
fit <- fd_nls("mdl", dat,
              algorithm="port", control=control)
# Error in match.fun(nlsfun)(fd_formula(globalname, mgen = mgen), data,  :
#     Convergence failure: iteration limit reached without convergence (10)
}

# Alternatively, GenSA can be used through nlsSA:
source(system.file("contrib", "nlsSA.R", package="fluodilution"))
fit <- fd_nls("mdl", dat, nlsfun=nlsSA, control=control)

\dontrun{
# This gives a summary for free parameters
print(summary(fit))
}

# To go back to the unconstrained parameters, one can use
# relisted_fit or relisted_coef/relisted_vcov separately
relfit <- relisted_fit(fit)
invisible(relisted_coef(fit))
invisible(relisted_vcov(fit))

# It is also possible to use a sandwich estimator instead
relfit <- relisted_fit(fit, vcov. = sandwich::sandwich)
print(lmtest::coeftest(relfit))

}
\seealso{
Other optimization-related entries: \code{\link{fd_comb}},
  \code{\link{fd_gaussian_fmm_solve}},
  \code{\link{fd_minuslogl}}
}
