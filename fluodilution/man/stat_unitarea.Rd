% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphics.R
\name{stat_unitarea}
\alias{stat_unitarea}
\alias{transform_hist}
\title{Display a histogram with unit area in \pkg{ggplot2}.}
\usage{
stat_unitarea(mapping = NULL, data = NULL, geom = "line",
  position = "identity", ..., na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)

transform_hist(y, a, b, trans)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link{aes}} or
\code{\link{aes_}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
   options:

   If \code{NULL}, the default, the data is inherited from the plot
   data as specified in the call to \code{\link{ggplot}}.

   A \code{data.frame}, or other object, will override the plot
   data. All objects will be fortified to produce a data frame. See
   \code{\link{fortify}} for which variables will be created.

   A \code{function} will be called with a single argument,
   the plot data. The return value must be a \code{data.frame.}, and
   will be used as the layer data.}

\item{geom}{Use to override the default connection between
\code{geom_density} and \code{stat_density}.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{...}{other arguments passed on to \code{\link{layer}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{color = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link{borders}}.}

\item{y}{A numeric vector of histogram proportions to be transformed
conserving unit area.}

\item{a}{The left breakpoints of the cells of the histogram.}

\item{b}{The right breakpoints.}

\item{trans}{Either a character string or a transformation object directly,
see package \pkg{scales} for possible transformers.}
}
\value{
An object that can be chained to a \code{\link{ggplot}} call.
}
\description{
This function requires the \pkg{numDeriv} package (this package is not
automatically installed when the \code{fluodilution} package is installed).
}
\details{
In \pkg{ggplot2}, densities displayed with
\code{\link[ggplot2]{stat_density}} automatically have unit area when the
\emph{x} axis is transformed.  If one wants to use \code{geom_line} to
display histograms from an \code{\link{fd_data}} object this transformation
is not made.  For instance, as an \code{\link{fd_data}} object stores its
breakpoints in linear units of fluorescence, when one wants to apply a
log-transformation on the \emph{x} axis then the area under the curve does
not sum to one anymore.  \code{stat_unitarea} takes those transformations
automatically into account.  For the arguments, see
\code{\link[ggplot2]{stat_density}}.  Additionally, \code{transform_hist} can
be used to apply a unit area transformation and return a numeric vector of
transformed proportions.
}
\section{Aesthetics}{


  \code{stat_unitarea} understands the following required aesthetics:
  \code{x} and \code{yu} (the \emph{y} component of the histograms for which
  we want to ensure a unit area).
}

\section{Computed variables}{


  \describe{

  \item{\code{unitarea}}{transformation of \code{yu} to ensure unit area (the
  default \code{y})}. \item{\code{scaled}}{transformation of \code{yu} to
  ensure unit area, scaled to a maximum of 1}.

  }
}

\examples{
data(FdClearPeaks)
ggplot(subset(FdClearPeaks, Type == "hists"),
       aes(x = (a + b) / 2.0, yu = y))+
  stat_unitarea()+
  facet_wrap(~ Timepoint, scales="free")+
  labs(y = "Unit area")+
  scale_x_log10()

ggplot(subset(FdClearPeaks, Type == "hists"),
       aes(x = (a + b) / 2.0, yu = y, y=..scaled..))+
  stat_unitarea()+
  labs(y = "Unit area, scaled to mode")+
  facet_wrap(~ Timepoint, scales="free")+
  scale_x_log10()

ggplot(transform(subset(FdClearPeaks, Type == "hists"),
                 y = transform_hist(y, a, b, "log10")),
       aes(x = (a + b) / 2.0, y = y))+
  geom_line()+
  labs(y = "Unit area")+
  facet_wrap(~ Timepoint, scales="free")+
  scale_x_log10()
}
